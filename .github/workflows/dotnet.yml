name: .NET with MySQL

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: "yes"
          MYSQL_DATABASE: sistema
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping -h 127.0.0.1 -u root"
          --health-interval=30s
          --health-timeout=10s
          --health-retries=10

    steps:
    - uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x

    - name: Wait for MySQL
      run: |
        echo "Waiting for MySQL to be healthy..."
        until [ "$(docker inspect --format='{{.State.Health.Status}}' build_mysql)" == "healthy" ]; do
          sleep 5
        done

    - name: Restore dependencies
      run: dotnet restore
      working-directory: ./WebApplication1

    - name: Build
      run: dotnet build --no-restore
      working-directory: ./WebApplication1

    - name: Apply migrations (if using Entity Framework)
      run: dotnet ef database update
      working-directory: ./WebApplication1
      env:
        ConnectionStrings__DefaultConnection: "Server=127.0.0.1;Database=sistema;User=root;Password=;"

    - name: Test
      env:
        ConnectionStrings__DefaultConnection: "Server=127.0.0.1;Database=sistema;User=root;Password=;"
      run: dotnet test --no-build --verbosity normal
      working-directory: ./WebApplication1

    - name: Print MySQL logs for debugging
      if: failure()
      run: docker logs $(docker ps -q -f name=mysql)
